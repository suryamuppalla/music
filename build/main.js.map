{"version":3,"sources":["./src/app/modules/music-list/music-list.module.ts","./src/app/modules/confirm-dialog/confirm-dialog.module.ts","./src/environments/environment.ts","./src/app/modules/music-details/music-details/music-details.component.ts","./src/app/modules/music-details/music-details/music-details.component.html","./src/app/modules/music-list/music-list/music-list.component.ts","./src/app/modules/music-list/music-list/music-list.component.html","./src/app/modules/update-music/update-music.module.ts","./src/app/modules/music-details/music-details.module.ts","./src/app/modules/add-new-music/add-new-music.module.ts","./src/app/modules/confirm-dialog/confirm-dialog/confirm-dialog.component.ts","./src/app/modules/confirm-dialog/confirm-dialog/confirm-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/constants.ts","./src/app/app.module.ts","./src/app/modules/update-music/update-music/update-music.component.ts","./src/app/modules/update-music/update-music/update-music.component.html","./src/app/modules/add-new-music/add-new-music/add-new-music.component.ts","./src/app/modules/add-new-music/add-new-music/add-new-music.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MusicListComponent} from './music-list/music-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule} from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [\n    MusicListComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    RouterModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class MusicListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\n\n\n\n@NgModule({\n  declarations: [\n    ConfirmDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule\n  ]\n})\nexport class ConfirmDialogModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  appUrl: `http://localhost/2017766/music/public/`\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {BaseUrl, Constants} from \"../../../common/constants\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ConfirmDialogComponent} from \"../../confirm-dialog/confirm-dialog/confirm-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './music-details.component.html',\n  styleUrls: ['./music-details.component.scss']\n})\nexport class MusicDetailsComponent implements OnInit {\n\n  public music: any = {};\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      this.musicDetails(params.id);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  musicDetails(musicId: string): void {\n    this.httpClient.get(`${Constants.music}/${musicId}`)\n      .subscribe((response: any) => {\n        if (response && response.length > 0) {\n          this.music = response[0];\n        }\n      });\n  }\n\n  confirmation(id: number) {\n    this.dialog.open(ConfirmDialogComponent, {\n      width: '450px',\n      data: {\n        title: `Are you sure you want to delete?`\n      }\n    }).afterClosed().subscribe(confirmed => {\n      if (confirmed) {\n        this.httpClient.delete(\n          `${Constants.music}/${id}`\n        ).subscribe((response: any) => {\n          this.snackBar.open(response.message, '', {\n            verticalPosition: 'top', duration: 4000\n          });\n          this.router.navigate(['/music']);\n        }, (error: any) => {\n          console.log(error);\n        });\n      }\n    })\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-9\">\n    <h1 class=\"mb-2\"><b>{{ music?.title }}</b></h1>\n\n    <div class=\"d-block\">\n      <span class=\"d-inline-block text-secondary mr-1\">Created By</span> <b class=\"d-inline-block ml-2\">{{ music?.author }}</b>,\n      <span class=\"text-secondary mr-4\">Created on</span> <b>{{ music?.created_at | date: 'MM/dd/yyyy' }}</b>\n    </div>\n\n\n    <div class=\"d-flex justify-content-start align-items-center mt-3\">\n      <audio controls class=\"\" *ngIf=\"music?.file\">\n        <source [src]=\"baseUrl+music?.file\" type=\"audio/ogg\">\n        <source [src]=\"baseUrl+music?.file\" type=\"audio/mpeg\">\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n\n    <p class=\"mt-2\">\n      <label class=\"d-block text-secondary\">Description</label>\n      {{ music?.description }}\n    </p>\n\n\n    <div class=\"d-block mt-3\">\n      <ul class=\"\">\n        <li>Language: <b class=\"font-weight-bold\">{{ music?.language }}</b></li>\n        <li>Rating: <b>{{ music?.rating }}</b></li>\n      </ul>\n    </div>\n\n    <div class=\"d-block mt-5\">\n      <p>Last Updated on: <b>{{ music?.updated_at | date: 'MM/dd/yyyy' }}</b></p>\n    </div>\n  </div>\n\n  <div class=\"col-lg-3\">\n    <div class=\"form-group\">\n      <a mat-stroked-button color=\"accent\" class=\"mb-3 w-100\" routerLink=\"../../\">Back to My Music List</a>\n      <a mat-raised-button color=\"accent\" routerLink=\"/update-music/{{music.id}}\" class=\"w-100 mb-3\">Update Music</a>\n      <a mat-raised-button color=\"warn\" (click)=\"confirmation(music.id)\" class=\"w-100\">Delete Music</a>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {BaseUrl, Constants} from \"../../../common/constants\";\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {debounceTime} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-music-list',\n  templateUrl: './music-list.component.html',\n  styleUrls: ['./music-list.component.scss']\n})\nexport class MusicListComponent implements OnInit {\n\n  public isLoading = false;\n  public books: any[] = [];\n  public search = new FormControl(null);\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getBooks('');\n\n    this.search\n      .valueChanges\n      .pipe(debounceTime(500))\n      .subscribe(search => {\n        this.getBooks(search);\n      });\n  }\n\n  getBooks(search: string): void {\n    this.isLoading = true;\n    let httpParams = new HttpParams();\n    if (search) {\n      httpParams = httpParams.append('searchText', search);\n    }\n    this.httpClient.get(Constants.music, {\n      params: httpParams\n    }).subscribe((response: any) => {\n      setTimeout(() => {\n        this.isLoading = false;\n        this.books = response;\n      }, 1500);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n      <h2 class=\"mb-0\" id=\"music\">My Music List</h2>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-lg-4\">\n\n    <div class=\"form-group mt-3 mb-3\">\n      <input placeholder=\"Search by Music titles\" id=\"search-input\" [formControl]=\"search\" class=\"form-control\">\n    </div>\n\n\n    <div class=\"d-flex justify-content-center align-items-center mt-0\" *ngIf=\"isLoading\">\n      <mat-spinner color=\"accent\" [diameter]=\"2\" strokeWidth=\"10\"></mat-spinner>\n    </div>\n  </div>\n\n  <div class=\"col-lg-2 offset-lg-6\">\n    <a mat-raised-button color=\"accent\" routerLink=\"/add-music\" class=\"example-icon favorite-icon\"\n       aria-label=\"Example icon-button with heart icon\">\n      Add New Music\n    </a>\n  </div>\n</div>\n\n\n<div class=\"row\">\n  <div class=\"col-lg-4\" *ngFor=\"let item of books\">\n    <mat-card class=\"example-card mb-3\">\n      <mat-card-header>\n        <mat-card-title [title]=\"item?.title\">{{ item.title?.slice(0, 30) }}...</mat-card-title>\n      </mat-card-header>\n      <div class=\"d-flex justify-content-center align-items-center mb-3 mt-2\">\n        <audio controls class=\"\">\n          <source [src]=\"baseUrl+item.file\" type=\"audio/ogg\">\n          <source [src]=\"baseUrl+item.file\" type=\"audio/mpeg\">\n          Your browser does not support the audio element.\n        </audio>\n      </div>\n      <mat-card-actions>\n        <a routerLink=\"/music-details/{{ item.id }}\" mat-button color=\"accent\">View Details</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UpdateMusicComponent } from './update-music/update-music.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {ConfirmDialogModule} from \"../confirm-dialog/confirm-dialog.module\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {RouterModule} from \"@angular/router\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n\n\n@NgModule({\n  declarations: [\n    UpdateMusicComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    ConfirmDialogModule,\n    MatDialogModule,\n    MatButtonModule,\n    RouterModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class UpdateMusicModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MusicDetailsComponent} from './music-details/music-details.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RouterModule} from \"@angular/router\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@NgModule({\n  declarations: [\n    MusicDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    HttpClientModule,\n    RouterModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ]\n})\nexport class MusicDetailsModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AddNewMusicComponent} from './add-new-music/add-new-music.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    AddNewMusicComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule\n  ]\n})\nexport class AddNewMusicModule {\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content>\n  <h3>{{ data?.title }}</h3>\n</mat-dialog-content>\n\n<div class=\"d-flex justify-content-end align-items-center mt-3\">\n  <button class=\"btn btn-light\" (click)=\"dialogRef.close()\">Cancel</button>\n  <button class=\"btn btn-danger\" style=\"margin-left: 20px;\" (click)=\"dialogRef.close(true)\">Delete</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'My Music';\n}\n","<mat-toolbar color=\"accent\" id=\"toolbar\">\n  <a class=\"logo\" routerLink=\"/music\">My Music</a>\n</mat-toolbar>\n\n\n<div class=\"container mt-3\">\n  <router-outlet></router-outlet>\n</div>\n","export const BaseUrl = `http://localhost/2017766/music/public/`;\n\n// const BaseUrl = `https://mi-linux.wlv.ac.uk/~2017781/personal-library/public/`;\n\nexport class Constants {\n  static music = BaseUrl + `music`;\n  static musicFileUpload = BaseUrl + 'music/upload';\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MusicDetailsModule} from './modules/music-details/music-details.module';\nimport {AddNewMusicModule} from './modules/add-new-music/add-new-music.module';\nimport {MusicListModule} from './modules/music-list/music-list.module';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {UpdateMusicModule} from \"./modules/update-music/update-music.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MusicDetailsModule,\n    AddNewMusicModule,\n    MusicListModule,\n    UpdateMusicModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BaseUrl, Constants} from \"../../../common/constants\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ConfirmDialogComponent} from \"../../confirm-dialog/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n  selector: 'app-update-music',\n  templateUrl: './update-music.component.html',\n  styleUrls: ['./update-music.component.scss']\n})\nexport class UpdateMusicComponent implements OnInit {\n  public isLoading = false;\n  public form: FormGroup = new FormGroup({\n    title: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required),\n    file: new FormControl(null),\n    author: new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    language: new FormControl(null, Validators.required)\n  });\n  public formData = new FormData();\n  public music: any = {};\n  public baseUrl = BaseUrl;\n\n  constructor(\n    private httpClient: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog\n  ) {\n    this.activatedRoute.params.subscribe(params => {\n      if (params.id) {\n        this.musicDetails(params.id);\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  fileUpload(event: Event) {\n    // @ts-ignore\n    this.form.patchValue({file: event.target.files[0].name})\n    // @ts-ignore\n    this.formData.append('file', event.target.files[0]);\n  }\n\n  musicDetails(musicId: string): void {\n    this.isLoading = true;\n    this.httpClient.get(`${Constants.music}/${musicId}`)\n      .subscribe((response: any) => {\n        setTimeout(() =>{\n          this.isLoading = false;\n        }, 1000);\n        if (response && response.length > 0) {\n          this.music = response[0];\n          this.form.patchValue(this.music);\n          this.form.patchValue({file: ''});\n        }\n      });\n  }\n\n  uploadMusicFile(): void {\n    if (this.form.valid) {\n      this.dialog.open(ConfirmDialogComponent, {\n        width: `450px`,\n        data: {title: `Are you sure you want to update?`}\n      }).afterClosed().subscribe(confirmed => {\n        if (confirmed) {\n          if (this.form.value.file) {\n            this.isLoading = true;\n            delete this.form.value.file;\n\n            this.httpClient.post(\n              Constants.musicFileUpload,\n              this.formData\n            ).subscribe((response: any) => {\n              console.log(response);\n              if (response && response.data) {\n                this.addNewMusic(response.data);\n              }\n            });\n          } else {\n            this.addNewMusic(this.music.file);\n          }\n        }\n      })\n    }\n  }\n\n  addNewMusic(file: string) {\n    const data = this.form.value;\n    data.file = file;\n    this.httpClient.put(\n      `${Constants.music}/${this.music.id}`,\n      data\n    ).subscribe((response: any) => {\n      this.snackBar.open(response.message, '', {\n        verticalPosition: 'top', duration: 4000\n      });\n      this.router.navigate(['/music']);\n    }, (error: any) => {\n      console.log(error);\n    });\n  }\n\n  confirmation() {\n    this.dialog.open(ConfirmDialogComponent, {\n      width: '450px',\n      data: {\n        title: `Are you sure you want to delete?`\n      }\n    }).afterClosed().subscribe(confirmed => {\n      if (confirmed) {\n        this.httpClient.delete(\n          `${Constants.music}/${this.music.id}`\n        ).subscribe((response: any) => {\n          this.snackBar.open(response.message, '', {\n            verticalPosition: 'top', duration: 4000\n          });\n          this.router.navigate(['/music']);\n        }, (error: any) => {\n          console.log(error);\n        });\n      }\n    })\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-5 offset-lg-3\">\n\n    <mat-card>\n\n      <a mat-button color=\"accent\" routerLink=\"/music\">Back to My Music</a>\n\n\n      <div class=\"d-block mt-0\" *ngIf=\"isLoading\">\n        <mat-spinner color=\"accent\" [diameter]=\"30\"></mat-spinner>\n      </div>\n\n      <h2 class=\"mt-4\">Update Music Details</h2>\n      <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"uploadMusicFile()\">\n\n        <div class=\"form-group\">\n          <label>Title</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Title\" formControlName=\"title\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Description</label>\n          <textarea class=\"form-control\" placeholder=\"Description\" formControlName=\"description\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Author</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Author\" formControlName=\"author\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Music File</label>\n          <input type=\"file\" class=\"form-control\" (change)=\"fileUpload($event)\">\n\n          <div class=\"d-flex justify-content-start align-items-start mt-2\">\n            <audio controls class=\"\" *ngIf=\"music?.file\">\n              <source [src]=\"baseUrl+music?.file\" type=\"audio/ogg\">\n              <source [src]=\"baseUrl+music?.file\" type=\"audio/mpeg\">\n              Your browser does not support the audio element.\n            </audio>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"rating\">Rating</label>\n          <input type=\"number\" id=\"rating\" placeholder=\"Rating\" formControlName=\"rating\" class=\"form-control\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"language\">Language</label>\n          <input type=\"text\" id=\"language\" placeholder=\"Language\" formControlName=\"language\" class=\"form-control\">\n        </div>\n\n        <div class=\"d-flex justify-content-start align-items-start mt-2\">\n          <button [disabled]=\"form?.invalid\" class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\n          <button class=\"btn btn-danger\" type=\"button\" style=\"margin-left: 20px;\" (click)=\"confirmation()\">\n            Delete\n          </button>\n        </div>\n      </form>\n    </mat-card>\n\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Constants} from '../../../common/constants';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Router} from \"@angular/router\";\n\nconst reg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n@Component({\n  selector: 'app-add-new-book',\n  templateUrl: './add-new-music.component.html',\n  styleUrls: ['./add-new-music.component.scss']\n})\nexport class AddNewMusicComponent implements OnInit {\n\n  public isLoading = false;\n  public form: FormGroup = new FormGroup({\n    title: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required),\n    file: new FormControl(null, Validators.required),\n    author: new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    language: new FormControl(null, Validators.required)\n  });\n  public formData = new FormData();\n\n  constructor(\n    private httpClient: HttpClient,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  fileUpload(event: Event) {\n    // @ts-ignore\n    this.formData.append('file', event.target.files[0]);\n  }\n\n  uploadMusicFile(): void {\n    if (this.form.valid) {\n      this.isLoading = true;\n      delete this.form.value.file;\n\n      this.httpClient.post(\n        Constants.musicFileUpload,\n        this.formData\n      ).subscribe((response: any) => {\n        console.log(response);\n        if (response && response.data) {\n          this.addNewMusic(response.data);\n        }\n      });\n    }\n  }\n\n  addNewMusic(file: string): void {\n    const data = this.form.value;\n    data.file = file;\n    this.httpClient.post(\n      Constants.music,\n      data\n    ).subscribe((response: any) => {\n      this.snackBar.open(response.message, '', {\n        verticalPosition: 'top', duration: 4000\n      });\n      this.router.navigate(['/music']);\n    }, (error: any) => {\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-lg-5 offset-lg-3\">\n\n    <mat-card>\n      <h2>Add New Music</h2>\n      <form class=\"example-form\" [formGroup]=\"form\" (ngSubmit)=\"uploadMusicFile()\">\n\n        <div class=\"form-group\">\n          <label>Title</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Title\" formControlName=\"title\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Description</label>\n          <textarea class=\"form-control\" placeholder=\"Description\" formControlName=\"description\"></textarea>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Author</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Author\" formControlName=\"author\">\n        </div>\n\n        <div class=\"form-group\">\n          <label>Music File</label>\n          <input type=\"file\" formControlName=\"file\" class=\"form-control\" (change)=\"fileUpload($event)\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"rating\">Rating</label>\n          <input type=\"number\" id=\"rating\" placeholder=\"Rating\" formControlName=\"rating\" class=\"form-control\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"language\">Language</label>\n          <input type=\"text\" id=\"language\" placeholder=\"Language\" formControlName=\"language\" class=\"form-control\">\n        </div>\n\n        <div class=\"form-group mt-2\">\n          <button [disabled]=\"form?.invalid\" class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </mat-card>\n\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MusicDetailsComponent} from './modules/music-details/music-details/music-details.component';\nimport {AddNewMusicComponent} from './modules/add-new-music/add-new-music/add-new-music.component';\nimport {MusicListComponent} from './modules/music-list/music-list/music-list.component';\nimport {UpdateMusicComponent} from \"./modules/update-music/update-music/update-music.component\";\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: '/music', pathMatch: 'full'\n  },\n  {\n    path: 'music',\n    component: MusicListComponent\n  },\n  {\n    path: 'music-details/:id',\n    component: MusicDetailsComponent\n  },\n  {\n    path: 'update-music/:id',\n    component: UpdateMusicComponent\n  },\n  {\n    path: 'add-music',\n    component: AddNewMusicComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}